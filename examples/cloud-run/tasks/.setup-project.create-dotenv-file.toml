[tasks.create-dotenv-file.linux]
condition.files_not_exist = ["${CARGO_MAKE_WORKING_DIRECTORY}/.env"]
dependencies = [
  "prepare"
]
script_runner = "@duckscript"
script = [
'''
out = set ""

ret_uid = exec id -u
ret_gid = exec id -g
uid = set ${ret_uid.stdout}
gid = set ${ret_gid.stdout}

out = set "${out}UID=${uid}"
out = set "${out}GID=${gid}"

!include_files ./tasks/.create-dotenv-file.cloudsdk-core-project.ds
out = set "${out}CLOUDSDK_CORE_PROJECT=${gcp_project_id}\n"
out = set "${out}TF_VAR_gcp_project_id=${gcp_project_id}\n"

!include_files ./tasks/.create-dotenv-file.ip_addrs.ds
out = set "${out}BIND_IP_ADDR=${bind_ip_addr}\n"
out = set "${out}PUBLIC_IP_ADDR_OR_FQDN=${public_ip_addr_or_fqdn}\n"

!include_files ./tasks/.create-dotenv-file.project-unique-id.ds
out = set "${out}PROJECT_UNIQUE_ID=${project_unique_id}\n"
out = set "${out}TF_VAR_basename=${project_unique_id}\n"

writefile .env ${out}
'''
]

[tasks.create-dotenv-file.mac]
condition.files_not_exist = ["${CARGO_MAKE_WORKING_DIRECTORY}/.env"]
dependencies = [
  "prepare"
]
script_runner = "@duckscript"
script = [
'''
out = set ""

!include_files ./tasks/.create-dotenv-file.cloudsdk-core-project.ds
out = set "${out}CLOUDSDK_CORE_PROJECT=${gcp_project_id}\n"
out = set "${out}TF_VAR_gcp_project_id=${gcp_project_id}\n"

!include_files ./tasks/.create-dotenv-file.ip_addrs.ds
out = set "${out}BIND_IP_ADDR=${bind_ip_addr}\n"
out = set "${out}PUBLIC_IP_ADDR_OR_FQDN=${public_ip_addr_or_fqdn}\n"

!include_files ./tasks/.create-dotenv-file.project-unique-id.ds
out = set "${out}PROJECT_UNIQUE_ID=${project_unique_id}\n"
out = set "${out}TF_VAR_basename=${project_unique_id}\n"

writefile .env ${out}
'''
]
